//// ------------------------------------------------------
//// THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
//// ------------------------------------------------------

Table State {
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  name String [not null]
  abbreviation String [pk, unique]
  people Person [not null]
  politicians Politician [not null]
  candidates Candidate [not null]
  RankingRecord PoliticianInRanking [not null]
}

Table View {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  name String [not null]
  description String [not null]
  economicFreedom Int
  personalFreedom Int
  politicalFreedom Int
  people Person [not null]
  parties PoliticalParty [not null]
  candidates Candidate [not null]
}

Table Person {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  name String [not null]
  cpf String [unique]
  password String
  phone String
  email String
  birthDate DateTime
  sex Sex
  gender String
  economicClass EconomicClass
  skinColor SkinColor
  voteState State [not null]
  voteStateAbbreviation String [not null]
  contact Contact
  views View [not null]
  sentiments Sentiment [not null]
  politicianProfile Politician
  candidateProfile Candidate
  Album Album
  albumId Int
  Deck Deck [not null]
}

Table PoliticalParty {
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  cnpj String [unique, not null]
  name String [not null]
  logoUrl String
  abbreviation String [pk, unique]
  email String
  password String
  mainColor String
  secondaryColor String
  about String
  contact Contact
  views View [not null]
  politicians Politician [not null]
  candidates Candidate [not null]
  rankingRecords PoliticianInRanking [not null]
}

Table Contact {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  phone String
  email String
  address String
  twitter String
  facebook String
  instagram String
  linkedin String
  youtube String
  website String
  person Person
  personId Int [unique]
  party PoliticalParty
  partyAbbreviation String [unique]
}

Table Candidate {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  name String [not null]
  description String [not null]
  person Person [not null]
  personId Int [unique, not null]
  party PoliticalParty [not null]
  partyAbbreviation String [not null]
  state State [not null]
  stateAbbreviation String [not null]
  views View [not null]
  sentiments Sentiment [not null]
}

Table Politician {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  name String [not null]
  description String [not null]
  person Person [not null]
  personId Int [unique, not null]
  officialId String [unique, not null]
  party PoliticalParty [not null]
  partyAbbreviation String [not null]
  state State [not null]
  stateAbbreviation String [not null]
  imageUrl String [not null]
  rankings PoliticianInRanking [not null]
}

Table Sentiment {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  name String [not null]
  person Person [not null]
  personId Int [unique, not null]
  candidate Candidate [not null]
  candidateId Int [unique, not null]
  imageUrl String [not null]
}

Table Ranking {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  year Int [not null]
  title String [not null]
  records PoliticianInRanking [not null]

  indexes {
    (year, title) [unique]
  }
}

Table PoliticianInRanking {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  politician Politician
  politicianId Int
  sourceId String
  sourceUrl String
  sourceName String
  ranking Ranking [not null]
  rankingId Int [not null]
  party PoliticalParty
  partyAbbreviation String
  state State [not null]
  stateAbbreviation String [not null]
  candidateType String [not null]
  quantityVote Int [not null]
  reelected Boolean [not null]
  cutAidShift Boolean [not null]
  isPresident Boolean [not null]
  cutHousingAllowance Boolean [not null]
  cutRetirement Boolean [not null]
  requestedFamilyPassport Boolean [not null]
  quotaAmountSum Int [not null]
  scorePresence Float [not null]
  scoreSaveQuota Float [not null]
  scoreProcess Float [not null]
  scoreInternal Float [not null]
  scorePrivileges Float [not null]
  scoreWastage Float [not null]
  scoreTotal Float [not null]
  scoreRanking Float [not null]
  scoreRankingByPosition Float [not null]
  scoreRankingByParty Float [not null]
  scoreRankingByState Float [not null]
  scorePresenceFormula String [not null]
  scoreProcessFormula String [not null]
  scorePrivilegesFormula String [not null]
  scoreSaveQuotaFormula String [not null]
  scoreWastageFormula String [not null]
  scoreTotalFormula String [not null]
  parliamentarianCount String [not null]
  parliamentarianStateCount String [not null]
  parliamentarianStaffMaxYear String [not null]
  parliamentarianQuotaMaxYear String [not null]
  card CardModel

  indexes {
    (rankingId, politicianId) [unique]
  }
}

Table Album {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  title String [not null]
  year Int [not null]
  description String [not null]
  coverUrl String [not null]
  thumbUrl String [not null]
  pages AlbumPage [not null]
  owners Person [not null]
  Deck Deck [not null]

  indexes {
    (year, title) [unique]
  }
}

Table AlbumPage {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  title String [not null]
  description String [not null]
  backgroundColor String
  album Album [not null]
  albumId Int [not null]
  stickers Sticker [not null]

  indexes {
    (albumId, title) [unique]
  }
}

Table Sticker {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  page AlbumPage [not null]
  pageId Int [not null]
  card CardModel [not null]
  cardId Int [not null]
  order Int [not null]
  identifier String [not null]

  indexes {
    (pageId, identifier) [unique]
  }
}

Table CardModel {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  record PoliticianInRanking
  recordId Int [unique]
  variant String [not null, default: 'normal']
  imageUrl String [not null]
  Sticker Sticker [not null]
  Card Card [not null]
}

Table Card {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  model CardModel [not null]
  modelId Int [not null]
  isPasted Boolean [not null, default: false]
  Deck Deck
  deckId Int
}

Table Deck {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  owner Person [not null]
  ownerId Int [not null]
  album Album [not null]
  albumId Int [not null]
  cards Card [not null]

  indexes {
    (ownerId, albumId) [unique]
  }
}

Table PersonToView {
  peopleId Int [ref: > Person.id]
  viewsId Int [ref: > View.id]
}

Table PoliticalPartyToView {
  partiesId String [ref: > PoliticalParty.abbreviation]
  viewsId Int [ref: > View.id]
}

Table CandidateToView {
  candidatesId Int [ref: > Candidate.id]
  viewsId Int [ref: > View.id]
}

Enum EconomicClass {
  A
  B
  C
  D
  E
}

Enum SkinColor {
  White
  Black
  Brown
  Yellow
  Other
}

Enum OrganizationType {
  PoliticalParty
  ThinkTank
  Media
  Government
}

Enum Sex {
  Male
  Female
}

Enum VoteOptions {
  Yes
  No
  Absent
}

Enum VoteGuidanceOptions {
  Yes
  No
  Any
}

Ref: Person.voteStateAbbreviation > State.abbreviation

Ref: Person.albumId > Album.id

Ref: Contact.personId - Person.id

Ref: Contact.partyAbbreviation - PoliticalParty.abbreviation

Ref: Candidate.personId - Person.id

Ref: Candidate.partyAbbreviation > PoliticalParty.abbreviation

Ref: Candidate.stateAbbreviation > State.abbreviation

Ref: Politician.personId - Person.id

Ref: Politician.partyAbbreviation > PoliticalParty.abbreviation

Ref: Politician.stateAbbreviation > State.abbreviation

Ref: Sentiment.personId > Person.id

Ref: Sentiment.candidateId > Candidate.id

Ref: PoliticianInRanking.politicianId > Politician.id

Ref: PoliticianInRanking.rankingId > Ranking.id

Ref: PoliticianInRanking.partyAbbreviation > PoliticalParty.abbreviation

Ref: PoliticianInRanking.stateAbbreviation > State.abbreviation

Ref: AlbumPage.albumId > Album.id

Ref: Sticker.pageId > AlbumPage.id

Ref: Sticker.cardId > CardModel.id

Ref: CardModel.recordId - PoliticianInRanking.id

Ref: Card.modelId > CardModel.id

Ref: Card.deckId > Deck.id

Ref: Deck.ownerId > Person.id

Ref: Deck.albumId > Album.id