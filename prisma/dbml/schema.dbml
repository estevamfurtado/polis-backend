//// ------------------------------------------------------
//// THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
//// ------------------------------------------------------

Table State {
  id Int [increment, unique, not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  name String [not null]
  abbreviation String [pk, unique]
  people Person [not null]
  politicians Politician [not null]
  candidates Candidate [not null]
  records Record [not null]
}

Table Person {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  name String [not null]
  cpf String [unique]
  password String
  phone String
  email String
  birthDate DateTime
  sex Sex
  gender String
  economicClass EconomicClass
  skinColor SkinColor
  voteStateAbbreviation String
  contact Contact
  diplomaticAxis Int
  economicAxis Int
  civilAxis Int
  socialAxis Int
  voteState State
  reactions Reaction [not null]
  politicianProfile Politician
  candidateProfile Candidate
  deck Card [not null]
  packs Int [not null, default: 18]
}

Table Party {
  id Int [increment, unique, not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  cnpj String [unique, not null]
  name String [not null]
  logoUrl String
  abbreviation String [pk, unique]
  email String
  password String
  mainColor String
  secondaryColor String
  about String
  contact Contact
  politicians Politician [not null]
  candidates Candidate [not null]
  records Record [not null]
}

Table Contact {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  phone String
  email String
  address String
  twitter String
  facebook String
  instagram String
  linkedin String
  youtube String
  website String
  person Person
  personId Int [unique]
  party Party
  partyAbbreviation String [unique]
}

Table Candidate {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  name String [not null]
  description String [not null]
  person Person [not null]
  personId Int [unique, not null]
  party Party [not null]
  partyAbbreviation String [not null]
  state State [not null]
  stateAbbreviation String [not null]
  reactions Reaction [not null]
  shortVideos CandidateShortVideo [not null]
}

Table CandidateShortVideo {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  title String [not null]
  url String [not null]
  thumbnail String
  candidate Candidate [not null]
  candidateId Int [unique, not null]
}

Table Politician {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  name String [not null]
  description String [not null]
  person Person [not null]
  personId Int [unique, not null]
  officialId String [unique, not null]
  party Party [not null]
  partyAbbreviation String [not null]
  state State [not null]
  stateAbbreviation String [not null]
  imageUrl String [not null]
  records Record [not null]
}

Table Reaction {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  type ReactionTypes [not null]
  person Person [not null]
  personId Int [not null]
  candidate Candidate [not null]
  candidateId Int [not null]
  comment String
}

Table Ranking {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  year Int [unique, not null]
  title String [not null]
  records Record [not null]
}

Table Record {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  politician Politician
  politicianId Int
  sourceId String
  sourceUrl String
  sourceName String
  ranking Ranking [not null]
  rankingId Int [not null]
  party Party
  partyAbbreviation String
  state State
  stateAbbreviation String
  candidateType String
  quantityVote Int
  reelected Boolean
  cutAidShift Boolean
  isPresident Boolean
  cutHousingAllowance Boolean
  cutRetirement Boolean
  requestedFamilyPassport Boolean
  quotaAmountSum Int
  scorePresence Float
  scoreSaveQuota Float
  scoreProcess Float
  scoreInternal Float
  scorePrivileges Float
  scoreWastage Float
  scoreTotal Float
  scoreRanking Int
  scoreRankingByPosition Int
  scoreRankingByParty Int
  scoreRankingByState Int
  scorePresenceFormula String
  scoreProcessFormula String
  scorePrivilegesFormula String
  scoreSaveQuotaFormula String
  scoreWastageFormula String
  scoreTotalFormula String
  parliamentarianCount Int
  parliamentarianStateCount Int
  parliamentarianStaffMaxYear Float
  parliamentarianQuotaMaxYear Float
  cardModel CardModel

  indexes {
    (rankingId, politicianId) [unique]
  }
}

Table Album {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  title String [not null]
  year Int [unique, not null]
  description String [not null]
  coverUrl String
  thumbUrl String
  entryPage Page
  entryPageId Int [unique]
  pages Page [not null]

  indexes {
    (year, title) [unique]
  }
}

Table Page {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  title String [not null]
  description String [not null]
  backgroundColor String
  successorId Int [unique]
  successor Page
  predecessor Page
  albumId Int [not null]
  entryInAlbum Album
  album Album [not null]
  entrySticker Sticker
  entryStickerId Int [unique]
  stickers Sticker [not null]

  indexes {
    (albumId, title) [unique]
  }
}

Table Sticker {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  pageId Int [not null]
  card CardModel [not null]
  cardId Int [not null]
  identifier String [not null]
  successorId Int [unique]
  successor Sticker
  predecessor Sticker
  entryInPage Page
  page Page [not null]

  indexes {
    (pageId, identifier) [unique]
  }
}

Table CardModel {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  record Record
  recordId Int [unique]
  variant String [not null, default: 'normal']
  imageUrl String [not null]
  stickers Sticker [not null]
  cards Card [not null]
}

Table Card {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  model CardModel [not null]
  modelId Int [not null]
  isPasted Boolean [not null, default: false]
  owner Person
  ownerId Int
}

Enum EconomicClass {
  A
  B
  C
  D
  E
}

Enum SkinColor {
  White
  Black
  Brown
  Yellow
  Other
}

Enum Sex {
  Male
  Female
}

Enum ReactionTypes {
  like
  dislike
}

Ref: Person.voteStateAbbreviation > State.abbreviation

Ref: Contact.personId - Person.id

Ref: Contact.partyAbbreviation - Party.abbreviation

Ref: Candidate.personId - Person.id

Ref: Candidate.partyAbbreviation > Party.abbreviation

Ref: Candidate.stateAbbreviation > State.abbreviation

Ref: CandidateShortVideo.candidateId > Candidate.id

Ref: Politician.personId - Person.id

Ref: Politician.partyAbbreviation > Party.abbreviation

Ref: Politician.stateAbbreviation > State.abbreviation

Ref: Reaction.personId > Person.id

Ref: Reaction.candidateId > Candidate.id

Ref: Record.politicianId > Politician.id

Ref: Record.rankingId > Ranking.id

Ref: Record.partyAbbreviation > Party.abbreviation

Ref: Record.stateAbbreviation > State.abbreviation

Ref: Album.entryPageId - Page.id

Ref: Page.successorId - Page.id

Ref: Page.albumId - Album.id

Ref: Page.entryStickerId - Sticker.id

Ref: Sticker.cardId > CardModel.id

Ref: Sticker.successorId - Sticker.id

Ref: Sticker.pageId - Page.id

Ref: CardModel.recordId - Record.id

Ref: Card.modelId > CardModel.id

Ref: Card.ownerId > Person.id